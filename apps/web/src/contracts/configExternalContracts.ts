/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const configExternalContracts = {
	sepolia: {
		Marketplace: {
			address:
				"0x3fc6df11c8e7eb7adf78ca9febce62cafddd0caef1214a0843839609539a180",
			classHash:
				"0x44eb6074fa74a9dbddb65c52394cd1bab274e3bc22e1fc36c26c37686d1e440",
			abi: [
				{
					type: "impl",
					name: "MarketplaceImpl",
					interface_name: "contracts::marketplace::IMarketplace",
				},
				{
					type: "struct",
					name: "core::integer::u256",
					members: [
						{ name: "low", type: "core::integer::u128" },
						{ name: "high", type: "core::integer::u128" },
					],
				},
				{
					type: "struct",
					name: "core::array::Span::<core::integer::u256>",
					members: [
						{
							name: "snapshot",
							type: "@core::array::Array::<core::integer::u256>",
						},
					],
				},
				{
					type: "struct",
					name: "core::array::Span::<core::felt252>",
					members: [
						{ name: "snapshot", type: "@core::array::Array::<core::felt252>" },
					],
				},
				{
					type: "interface",
					name: "contracts::marketplace::IMarketplace",
					items: [
						{
							type: "function",
							name: "assign_seller_role",
							inputs: [
								{
									name: "assignee",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "assign_consumer_role",
							inputs: [
								{
									name: "assignee",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "assign_admin_role",
							inputs: [
								{
									name: "assignee",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "buy_product",
							inputs: [
								{ name: "token_id", type: "core::integer::u256" },
								{ name: "token_amount", type: "core::integer::u256" },
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "buy_products",
							inputs: [
								{
									name: "token_ids",
									type: "core::array::Span::<core::integer::u256>",
								},
								{
									name: "token_amount",
									type: "core::array::Span::<core::integer::u256>",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "create_product",
							inputs: [
								{ name: "initial_stock", type: "core::integer::u256" },
								{ name: "price", type: "core::integer::u256" },
								{ name: "data", type: "core::array::Span::<core::felt252>" },
							],
							outputs: [{ type: "core::integer::u256" }],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "create_products",
							inputs: [
								{
									name: "initial_stock",
									type: "core::array::Span::<core::integer::u256>",
								},
								{
									name: "price",
									type: "core::array::Span::<core::integer::u256>",
								},
							],
							outputs: [{ type: "core::array::Span::<core::integer::u256>" }],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "delete_product",
							inputs: [{ name: "token_id", type: "core::integer::u256" }],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "delete_products",
							inputs: [
								{
									name: "token_ids",
									type: "core::array::Span::<core::integer::u256>",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "claim_balance",
							inputs: [
								{
									name: "producer",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::integer::u256" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "claim",
							inputs: [],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "impl",
					name: "ERC1155ReceiverImpl",
					interface_name:
						"openzeppelin_token::erc1155::interface::IERC1155Receiver",
				},
				{
					type: "interface",
					name: "openzeppelin_token::erc1155::interface::IERC1155Receiver",
					items: [
						{
							type: "function",
							name: "on_erc1155_received",
							inputs: [
								{
									name: "operator",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "from",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "token_id", type: "core::integer::u256" },
								{ name: "value", type: "core::integer::u256" },
								{ name: "data", type: "core::array::Span::<core::felt252>" },
							],
							outputs: [{ type: "core::felt252" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "on_erc1155_batch_received",
							inputs: [
								{
									name: "operator",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "from",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "token_ids",
									type: "core::array::Span::<core::integer::u256>",
								},
								{
									name: "values",
									type: "core::array::Span::<core::integer::u256>",
								},
								{ name: "data", type: "core::array::Span::<core::felt252>" },
							],
							outputs: [{ type: "core::felt252" }],
							state_mutability: "view",
						},
					],
				},
				{
					type: "impl",
					name: "SRC5Impl",
					interface_name: "openzeppelin_introspection::interface::ISRC5",
				},
				{
					type: "enum",
					name: "core::bool",
					variants: [
						{ name: "False", type: "()" },
						{ name: "True", type: "()" },
					],
				},
				{
					type: "interface",
					name: "openzeppelin_introspection::interface::ISRC5",
					items: [
						{
							type: "function",
							name: "supports_interface",
							inputs: [{ name: "interface_id", type: "core::felt252" }],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
					],
				},
				{
					type: "impl",
					name: "AccessControlImpl",
					interface_name:
						"openzeppelin_access::accesscontrol::interface::IAccessControl",
				},
				{
					type: "interface",
					name: "openzeppelin_access::accesscontrol::interface::IAccessControl",
					items: [
						{
							type: "function",
							name: "has_role",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "get_role_admin",
							inputs: [{ name: "role", type: "core::felt252" }],
							outputs: [{ type: "core::felt252" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "grant_role",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "revoke_role",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "renounce_role",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "constructor",
					name: "constructor",
					inputs: [
						{
							name: "cofi_collection_address",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{
							name: "admin",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{ name: "market_fee", type: "core::integer::u256" },
					],
				},
				{
					type: "event",
					name: "openzeppelin_token::erc1155::erc1155_receiver::ERC1155ReceiverComponent::Event",
					kind: "enum",
					variants: [],
				},
				{
					type: "event",
					name: "openzeppelin_introspection::src5::SRC5Component::Event",
					kind: "enum",
					variants: [],
				},
				{
					type: "event",
					name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
					kind: "struct",
					members: [
						{ name: "role", type: "core::felt252", kind: "data" },
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "sender",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
					kind: "struct",
					members: [
						{ name: "role", type: "core::felt252", kind: "data" },
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "sender",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
					kind: "struct",
					members: [
						{ name: "role", type: "core::felt252", kind: "data" },
						{
							name: "previous_admin_role",
							type: "core::felt252",
							kind: "data",
						},
						{ name: "new_admin_role", type: "core::felt252", kind: "data" },
					],
				},
				{
					type: "event",
					name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
					kind: "enum",
					variants: [
						{
							name: "RoleGranted",
							type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
							kind: "nested",
						},
						{
							name: "RoleRevoked",
							type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
							kind: "nested",
						},
						{
							name: "RoleAdminChanged",
							type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
							kind: "nested",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
					kind: "struct",
					members: [
						{
							name: "class_hash",
							type: "core::starknet::class_hash::ClassHash",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
					kind: "enum",
					variants: [
						{
							name: "Upgraded",
							type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
							kind: "nested",
						},
					],
				},
				{
					type: "event",
					name: "contracts::marketplace::Marketplace::DeleteProduct",
					kind: "struct",
					members: [
						{ name: "token_id", type: "core::integer::u256", kind: "data" },
					],
				},
				{
					type: "event",
					name: "contracts::marketplace::Marketplace::CreateProduct",
					kind: "struct",
					members: [
						{ name: "token_id", type: "core::integer::u256", kind: "data" },
						{
							name: "initial_stock",
							type: "core::integer::u256",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "contracts::marketplace::Marketplace::UpdateStock",
					kind: "struct",
					members: [
						{ name: "token_id", type: "core::integer::u256", kind: "data" },
						{ name: "new_stock", type: "core::integer::u256", kind: "data" },
					],
				},
				{
					type: "event",
					name: "contracts::marketplace::Marketplace::BuyProduct",
					kind: "struct",
					members: [
						{ name: "token_id", type: "core::integer::u256", kind: "data" },
						{ name: "amount", type: "core::integer::u256", kind: "data" },
						{ name: "price", type: "core::integer::u256", kind: "data" },
					],
				},
				{
					type: "event",
					name: "contracts::marketplace::Marketplace::BuyBatchProducts",
					kind: "struct",
					members: [
						{
							name: "token_ids",
							type: "core::array::Span::<core::integer::u256>",
							kind: "data",
						},
						{
							name: "token_amount",
							type: "core::array::Span::<core::integer::u256>",
							kind: "data",
						},
						{ name: "total_price", type: "core::integer::u256", kind: "data" },
					],
				},
				{
					type: "event",
					name: "contracts::marketplace::Marketplace::PaymentSeller",
					kind: "struct",
					members: [
						{
							name: "token_ids",
							type: "core::array::Span::<core::integer::u256>",
							kind: "data",
						},
						{
							name: "seller",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{ name: "payment", type: "core::integer::u256", kind: "data" },
					],
				},
				{
					type: "event",
					name: "contracts::marketplace::Marketplace::Event",
					kind: "enum",
					variants: [
						{
							name: "ERC1155ReceiverEvent",
							type: "openzeppelin_token::erc1155::erc1155_receiver::ERC1155ReceiverComponent::Event",
							kind: "flat",
						},
						{
							name: "SRC5Event",
							type: "openzeppelin_introspection::src5::SRC5Component::Event",
							kind: "flat",
						},
						{
							name: "AccessControlEvent",
							type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
							kind: "flat",
						},
						{
							name: "UpgradeableEvent",
							type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
							kind: "flat",
						},
						{
							name: "DeleteProduct",
							type: "contracts::marketplace::Marketplace::DeleteProduct",
							kind: "nested",
						},
						{
							name: "CreateProduct",
							type: "contracts::marketplace::Marketplace::CreateProduct",
							kind: "nested",
						},
						{
							name: "UpdateStock",
							type: "contracts::marketplace::Marketplace::UpdateStock",
							kind: "nested",
						},
						{
							name: "BuyProduct",
							type: "contracts::marketplace::Marketplace::BuyProduct",
							kind: "nested",
						},
						{
							name: "BuyBatchProducts",
							type: "contracts::marketplace::Marketplace::BuyBatchProducts",
							kind: "nested",
						},
						{
							name: "PaymentSeller",
							type: "contracts::marketplace::Marketplace::PaymentSeller",
							kind: "nested",
						},
					],
				},
			],
		},
		CofiCollection: {
			address:
				"0x375a9b9236e5c02e95de236811259ff7877832ad65f752cb1fabd4d2127f930",
			classHash:
				"0x7a108607024be2054d1558cbfd5de3fe264afe9e025bc7653b1bc5fc76d1af0",
			abi: [
				{
					type: "impl",
					name: "UpgradeableImpl",
					interface_name: "openzeppelin_upgrades::interface::IUpgradeable",
				},
				{
					type: "interface",
					name: "openzeppelin_upgrades::interface::IUpgradeable",
					items: [
						{
							type: "function",
							name: "upgrade",
							inputs: [
								{
									name: "new_class_hash",
									type: "core::starknet::class_hash::ClassHash",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "function",
					name: "pause",
					inputs: [],
					outputs: [],
					state_mutability: "external",
				},
				{
					type: "function",
					name: "unpause",
					inputs: [],
					outputs: [],
					state_mutability: "external",
				},
				{
					type: "struct",
					name: "core::integer::u256",
					members: [
						{ name: "low", type: "core::integer::u128" },
						{ name: "high", type: "core::integer::u128" },
					],
				},
				{
					type: "function",
					name: "burn",
					inputs: [
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{ name: "token_id", type: "core::integer::u256" },
						{ name: "value", type: "core::integer::u256" },
					],
					outputs: [],
					state_mutability: "external",
				},
				{
					type: "struct",
					name: "core::array::Span::<core::integer::u256>",
					members: [
						{
							name: "snapshot",
							type: "@core::array::Array::<core::integer::u256>",
						},
					],
				},
				{
					type: "function",
					name: "batch_burn",
					inputs: [
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{
							name: "token_ids",
							type: "core::array::Span::<core::integer::u256>",
						},
						{
							name: "values",
							type: "core::array::Span::<core::integer::u256>",
						},
					],
					outputs: [],
					state_mutability: "external",
				},
				{
					type: "struct",
					name: "core::array::Span::<core::felt252>",
					members: [
						{ name: "snapshot", type: "@core::array::Array::<core::felt252>" },
					],
				},
				{
					type: "function",
					name: "mint",
					inputs: [
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{ name: "token_id", type: "core::integer::u256" },
						{ name: "value", type: "core::integer::u256" },
						{ name: "data", type: "core::array::Span::<core::felt252>" },
					],
					outputs: [],
					state_mutability: "external",
				},
				{
					type: "struct",
					name: "core::byte_array::ByteArray",
					members: [
						{
							name: "data",
							type: "core::array::Array::<core::bytes_31::bytes31>",
						},
						{ name: "pending_word", type: "core::felt252" },
						{ name: "pending_word_len", type: "core::integer::u32" },
					],
				},
				{
					type: "function",
					name: "mint_item",
					inputs: [
						{
							name: "recipient",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{ name: "token_id", type: "core::integer::u256" },
						{ name: "value", type: "core::integer::u256" },
						{ name: "data", type: "core::array::Span::<core::felt252>" },
						{ name: "uri", type: "core::byte_array::ByteArray" },
					],
					outputs: [],
					state_mutability: "external",
				},
				{
					type: "function",
					name: "batch_mint",
					inputs: [
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{
							name: "token_ids",
							type: "core::array::Span::<core::integer::u256>",
						},
						{
							name: "values",
							type: "core::array::Span::<core::integer::u256>",
						},
						{ name: "data", type: "core::array::Span::<core::felt252>" },
					],
					outputs: [],
					state_mutability: "external",
				},
				{
					type: "function",
					name: "set_base_uri",
					inputs: [{ name: "base_uri", type: "core::byte_array::ByteArray" }],
					outputs: [],
					state_mutability: "external",
				},
				{
					type: "function",
					name: "set_minter",
					inputs: [
						{
							name: "minter",
							type: "core::starknet::contract_address::ContractAddress",
						},
					],
					outputs: [],
					state_mutability: "external",
				},
				{
					type: "impl",
					name: "ERC1155MixinImpl",
					interface_name: "openzeppelin_token::erc1155::interface::ERC1155ABI",
				},
				{
					type: "struct",
					name: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
					members: [
						{
							name: "snapshot",
							type: "@core::array::Array::<core::starknet::contract_address::ContractAddress>",
						},
					],
				},
				{
					type: "enum",
					name: "core::bool",
					variants: [
						{ name: "False", type: "()" },
						{ name: "True", type: "()" },
					],
				},
				{
					type: "interface",
					name: "openzeppelin_token::erc1155::interface::ERC1155ABI",
					items: [
						{
							type: "function",
							name: "balance_of",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "token_id", type: "core::integer::u256" },
							],
							outputs: [{ type: "core::integer::u256" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "balance_of_batch",
							inputs: [
								{
									name: "accounts",
									type: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
								},
								{
									name: "token_ids",
									type: "core::array::Span::<core::integer::u256>",
								},
							],
							outputs: [{ type: "core::array::Span::<core::integer::u256>" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "safe_transfer_from",
							inputs: [
								{
									name: "from",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "to",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "token_id", type: "core::integer::u256" },
								{ name: "value", type: "core::integer::u256" },
								{ name: "data", type: "core::array::Span::<core::felt252>" },
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "safe_batch_transfer_from",
							inputs: [
								{
									name: "from",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "to",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "token_ids",
									type: "core::array::Span::<core::integer::u256>",
								},
								{
									name: "values",
									type: "core::array::Span::<core::integer::u256>",
								},
								{ name: "data", type: "core::array::Span::<core::felt252>" },
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "is_approved_for_all",
							inputs: [
								{
									name: "owner",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "operator",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "set_approval_for_all",
							inputs: [
								{
									name: "operator",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "approved", type: "core::bool" },
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "supports_interface",
							inputs: [{ name: "interface_id", type: "core::felt252" }],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "uri",
							inputs: [{ name: "token_id", type: "core::integer::u256" }],
							outputs: [{ type: "core::byte_array::ByteArray" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "balanceOf",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "tokenId", type: "core::integer::u256" },
							],
							outputs: [{ type: "core::integer::u256" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "balanceOfBatch",
							inputs: [
								{
									name: "accounts",
									type: "core::array::Span::<core::starknet::contract_address::ContractAddress>",
								},
								{
									name: "tokenIds",
									type: "core::array::Span::<core::integer::u256>",
								},
							],
							outputs: [{ type: "core::array::Span::<core::integer::u256>" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "safeTransferFrom",
							inputs: [
								{
									name: "from",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "to",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "tokenId", type: "core::integer::u256" },
								{ name: "value", type: "core::integer::u256" },
								{ name: "data", type: "core::array::Span::<core::felt252>" },
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "safeBatchTransferFrom",
							inputs: [
								{
									name: "from",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "to",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "tokenIds",
									type: "core::array::Span::<core::integer::u256>",
								},
								{
									name: "values",
									type: "core::array::Span::<core::integer::u256>",
								},
								{ name: "data", type: "core::array::Span::<core::felt252>" },
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "isApprovedForAll",
							inputs: [
								{
									name: "owner",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "operator",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "setApprovalForAll",
							inputs: [
								{
									name: "operator",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "approved", type: "core::bool" },
							],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "impl",
					name: "PausableImpl",
					interface_name: "openzeppelin_security::interface::IPausable",
				},
				{
					type: "interface",
					name: "openzeppelin_security::interface::IPausable",
					items: [
						{
							type: "function",
							name: "is_paused",
							inputs: [],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
					],
				},
				{
					type: "impl",
					name: "AccessControlImpl",
					interface_name:
						"openzeppelin_access::accesscontrol::interface::IAccessControl",
				},
				{
					type: "interface",
					name: "openzeppelin_access::accesscontrol::interface::IAccessControl",
					items: [
						{
							type: "function",
							name: "has_role",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "get_role_admin",
							inputs: [{ name: "role", type: "core::felt252" }],
							outputs: [{ type: "core::felt252" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "grant_role",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "revoke_role",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "renounce_role",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "impl",
					name: "AccessControlCamelImpl",
					interface_name:
						"openzeppelin_access::accesscontrol::interface::IAccessControlCamel",
				},
				{
					type: "interface",
					name: "openzeppelin_access::accesscontrol::interface::IAccessControlCamel",
					items: [
						{
							type: "function",
							name: "hasRole",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "getRoleAdmin",
							inputs: [{ name: "role", type: "core::felt252" }],
							outputs: [{ type: "core::felt252" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "grantRole",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "revokeRole",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "renounceRole",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "constructor",
					name: "constructor",
					inputs: [
						{
							name: "default_admin",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{
							name: "pauser",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{
							name: "minter",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{
							name: "uri_setter",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{
							name: "upgrader",
							type: "core::starknet::contract_address::ContractAddress",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_token::erc1155::erc1155::ERC1155Component::TransferSingle",
					kind: "struct",
					members: [
						{
							name: "operator",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "key",
						},
						{
							name: "from",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "key",
						},
						{
							name: "to",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "key",
						},
						{ name: "id", type: "core::integer::u256", kind: "data" },
						{ name: "value", type: "core::integer::u256", kind: "data" },
					],
				},
				{
					type: "event",
					name: "openzeppelin_token::erc1155::erc1155::ERC1155Component::TransferBatch",
					kind: "struct",
					members: [
						{
							name: "operator",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "key",
						},
						{
							name: "from",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "key",
						},
						{
							name: "to",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "key",
						},
						{
							name: "ids",
							type: "core::array::Span::<core::integer::u256>",
							kind: "data",
						},
						{
							name: "values",
							type: "core::array::Span::<core::integer::u256>",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_token::erc1155::erc1155::ERC1155Component::ApprovalForAll",
					kind: "struct",
					members: [
						{
							name: "owner",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "key",
						},
						{
							name: "operator",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "key",
						},
						{ name: "approved", type: "core::bool", kind: "data" },
					],
				},
				{
					type: "event",
					name: "openzeppelin_token::erc1155::erc1155::ERC1155Component::URI",
					kind: "struct",
					members: [
						{
							name: "value",
							type: "core::byte_array::ByteArray",
							kind: "data",
						},
						{ name: "id", type: "core::integer::u256", kind: "key" },
					],
				},
				{
					type: "event",
					name: "openzeppelin_token::erc1155::erc1155::ERC1155Component::Event",
					kind: "enum",
					variants: [
						{
							name: "TransferSingle",
							type: "openzeppelin_token::erc1155::erc1155::ERC1155Component::TransferSingle",
							kind: "nested",
						},
						{
							name: "TransferBatch",
							type: "openzeppelin_token::erc1155::erc1155::ERC1155Component::TransferBatch",
							kind: "nested",
						},
						{
							name: "ApprovalForAll",
							type: "openzeppelin_token::erc1155::erc1155::ERC1155Component::ApprovalForAll",
							kind: "nested",
						},
						{
							name: "URI",
							type: "openzeppelin_token::erc1155::erc1155::ERC1155Component::URI",
							kind: "nested",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_introspection::src5::SRC5Component::Event",
					kind: "enum",
					variants: [],
				},
				{
					type: "event",
					name: "openzeppelin_security::pausable::PausableComponent::Paused",
					kind: "struct",
					members: [
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_security::pausable::PausableComponent::Unpaused",
					kind: "struct",
					members: [
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_security::pausable::PausableComponent::Event",
					kind: "enum",
					variants: [
						{
							name: "Paused",
							type: "openzeppelin_security::pausable::PausableComponent::Paused",
							kind: "nested",
						},
						{
							name: "Unpaused",
							type: "openzeppelin_security::pausable::PausableComponent::Unpaused",
							kind: "nested",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
					kind: "struct",
					members: [
						{ name: "role", type: "core::felt252", kind: "data" },
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "sender",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
					kind: "struct",
					members: [
						{ name: "role", type: "core::felt252", kind: "data" },
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "sender",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
					kind: "struct",
					members: [
						{ name: "role", type: "core::felt252", kind: "data" },
						{
							name: "previous_admin_role",
							type: "core::felt252",
							kind: "data",
						},
						{ name: "new_admin_role", type: "core::felt252", kind: "data" },
					],
				},
				{
					type: "event",
					name: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
					kind: "enum",
					variants: [
						{
							name: "RoleGranted",
							type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleGranted",
							kind: "nested",
						},
						{
							name: "RoleRevoked",
							type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleRevoked",
							kind: "nested",
						},
						{
							name: "RoleAdminChanged",
							type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::RoleAdminChanged",
							kind: "nested",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
					kind: "struct",
					members: [
						{
							name: "class_hash",
							type: "core::starknet::class_hash::ClassHash",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
					kind: "enum",
					variants: [
						{
							name: "Upgraded",
							type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
							kind: "nested",
						},
					],
				},
				{
					type: "event",
					name: "contracts::cofi_collection::CofiCollection::Event",
					kind: "enum",
					variants: [
						{
							name: "ERC1155Event",
							type: "openzeppelin_token::erc1155::erc1155::ERC1155Component::Event",
							kind: "flat",
						},
						{
							name: "SRC5Event",
							type: "openzeppelin_introspection::src5::SRC5Component::Event",
							kind: "flat",
						},
						{
							name: "PausableEvent",
							type: "openzeppelin_security::pausable::PausableComponent::Event",
							kind: "flat",
						},
						{
							name: "AccessControlEvent",
							type: "openzeppelin_access::accesscontrol::accesscontrol::AccessControlComponent::Event",
							kind: "flat",
						},
						{
							name: "UpgradeableEvent",
							type: "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
							kind: "flat",
						},
					],
				},
			],
		},
		stark: {
			address:
				"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d",
			classHash:
				"0x4ad3c1dc8413453db314497945b6903e1c766495a1e60492d44da9c2a986e4b",
			abi: [
				{
					type: "impl",
					name: "LockingContract",
					interface_name: "src::mintable_lock_interface::ILockingContract",
				},
				{
					type: "interface",
					name: "src::mintable_lock_interface::ILockingContract",
					items: [
						{
							type: "function",
							name: "set_locking_contract",
							inputs: [
								{
									name: "locking_contract",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "get_locking_contract",
							inputs: [],
							outputs: [
								{ type: "core::starknet::contract_address::ContractAddress" },
							],
							state_mutability: "view",
						},
					],
				},
				{
					type: "impl",
					name: "LockAndDelegate",
					interface_name: "src::mintable_lock_interface::ILockAndDelegate",
				},
				{
					type: "struct",
					name: "core::integer::u256",
					members: [
						{ name: "low", type: "core::integer::u128" },
						{ name: "high", type: "core::integer::u128" },
					],
				},
				{
					type: "interface",
					name: "src::mintable_lock_interface::ILockAndDelegate",
					items: [
						{
							type: "function",
							name: "lock_and_delegate",
							inputs: [
								{
									name: "delegatee",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "amount", type: "core::integer::u256" },
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "lock_and_delegate_by_sig",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "delegatee",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "amount", type: "core::integer::u256" },
								{ name: "nonce", type: "core::felt252" },
								{ name: "expiry", type: "core::integer::u64" },
								{
									name: "signature",
									type: "core::array::Array::<core::felt252>",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "impl",
					name: "MintableToken",
					interface_name: "src::mintable_token_interface::IMintableToken",
				},
				{
					type: "interface",
					name: "src::mintable_token_interface::IMintableToken",
					items: [
						{
							type: "function",
							name: "permissioned_mint",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "amount", type: "core::integer::u256" },
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "permissioned_burn",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "amount", type: "core::integer::u256" },
							],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "impl",
					name: "MintableTokenCamelImpl",
					interface_name: "src::mintable_token_interface::IMintableTokenCamel",
				},
				{
					type: "interface",
					name: "src::mintable_token_interface::IMintableTokenCamel",
					items: [
						{
							type: "function",
							name: "permissionedMint",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "amount", type: "core::integer::u256" },
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "permissionedBurn",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "amount", type: "core::integer::u256" },
							],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "impl",
					name: "Replaceable",
					interface_name: "src::replaceability_interface::IReplaceable",
				},
				{
					type: "struct",
					name: "core::array::Span::<core::felt252>",
					members: [
						{ name: "snapshot", type: "@core::array::Array::<core::felt252>" },
					],
				},
				{
					type: "struct",
					name: "src::replaceability_interface::EICData",
					members: [
						{ name: "eic_hash", type: "core::starknet::class_hash::ClassHash" },
						{
							name: "eic_init_data",
							type: "core::array::Span::<core::felt252>",
						},
					],
				},
				{
					type: "enum",
					name: "core::option::Option::<src::replaceability_interface::EICData>",
					variants: [
						{ name: "Some", type: "src::replaceability_interface::EICData" },
						{ name: "None", type: "()" },
					],
				},
				{
					type: "enum",
					name: "core::bool",
					variants: [
						{ name: "False", type: "()" },
						{ name: "True", type: "()" },
					],
				},
				{
					type: "struct",
					name: "src::replaceability_interface::ImplementationData",
					members: [
						{
							name: "impl_hash",
							type: "core::starknet::class_hash::ClassHash",
						},
						{
							name: "eic_data",
							type: "core::option::Option::<src::replaceability_interface::EICData>",
						},
						{ name: "final", type: "core::bool" },
					],
				},
				{
					type: "interface",
					name: "src::replaceability_interface::IReplaceable",
					items: [
						{
							type: "function",
							name: "get_upgrade_delay",
							inputs: [],
							outputs: [{ type: "core::integer::u64" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "get_impl_activation_time",
							inputs: [
								{
									name: "implementation_data",
									type: "src::replaceability_interface::ImplementationData",
								},
							],
							outputs: [{ type: "core::integer::u64" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "add_new_implementation",
							inputs: [
								{
									name: "implementation_data",
									type: "src::replaceability_interface::ImplementationData",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "remove_implementation",
							inputs: [
								{
									name: "implementation_data",
									type: "src::replaceability_interface::ImplementationData",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "replace_to",
							inputs: [
								{
									name: "implementation_data",
									type: "src::replaceability_interface::ImplementationData",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "impl",
					name: "AccessControlImplExternal",
					interface_name: "src::access_control_interface::IAccessControl",
				},
				{
					type: "interface",
					name: "src::access_control_interface::IAccessControl",
					items: [
						{
							type: "function",
							name: "has_role",
							inputs: [
								{ name: "role", type: "core::felt252" },
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "get_role_admin",
							inputs: [{ name: "role", type: "core::felt252" }],
							outputs: [{ type: "core::felt252" }],
							state_mutability: "view",
						},
					],
				},
				{
					type: "impl",
					name: "RolesImpl",
					interface_name: "src::roles_interface::IMinimalRoles",
				},
				{
					type: "interface",
					name: "src::roles_interface::IMinimalRoles",
					items: [
						{
							type: "function",
							name: "is_governance_admin",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "is_upgrade_governor",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "register_governance_admin",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "remove_governance_admin",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "register_upgrade_governor",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "remove_upgrade_governor",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "renounce",
							inputs: [{ name: "role", type: "core::felt252" }],
							outputs: [],
							state_mutability: "external",
						},
					],
				},
				{
					type: "impl",
					name: "ERC20Impl",
					interface_name: "openzeppelin::token::erc20::interface::IERC20",
				},
				{
					type: "interface",
					name: "openzeppelin::token::erc20::interface::IERC20",
					items: [
						{
							type: "function",
							name: "name",
							inputs: [],
							outputs: [{ type: "core::felt252" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "symbol",
							inputs: [],
							outputs: [{ type: "core::felt252" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "decimals",
							inputs: [],
							outputs: [{ type: "core::integer::u8" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "total_supply",
							inputs: [],
							outputs: [{ type: "core::integer::u256" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "balance_of",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::integer::u256" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "allowance",
							inputs: [
								{
									name: "owner",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "spender",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::integer::u256" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "transfer",
							inputs: [
								{
									name: "recipient",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "amount", type: "core::integer::u256" },
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "transfer_from",
							inputs: [
								{
									name: "sender",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "recipient",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "amount", type: "core::integer::u256" },
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "external",
						},
						{
							type: "function",
							name: "approve",
							inputs: [
								{
									name: "spender",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "amount", type: "core::integer::u256" },
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "external",
						},
					],
				},
				{
					type: "impl",
					name: "ERC20CamelOnlyImpl",
					interface_name:
						"openzeppelin::token::erc20::interface::IERC20CamelOnly",
				},
				{
					type: "interface",
					name: "openzeppelin::token::erc20::interface::IERC20CamelOnly",
					items: [
						{
							type: "function",
							name: "totalSupply",
							inputs: [],
							outputs: [{ type: "core::integer::u256" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "balanceOf",
							inputs: [
								{
									name: "account",
									type: "core::starknet::contract_address::ContractAddress",
								},
							],
							outputs: [{ type: "core::integer::u256" }],
							state_mutability: "view",
						},
						{
							type: "function",
							name: "transferFrom",
							inputs: [
								{
									name: "sender",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{
									name: "recipient",
									type: "core::starknet::contract_address::ContractAddress",
								},
								{ name: "amount", type: "core::integer::u256" },
							],
							outputs: [{ type: "core::bool" }],
							state_mutability: "external",
						},
					],
				},
				{
					type: "constructor",
					name: "constructor",
					inputs: [
						{ name: "name", type: "core::felt252" },
						{ name: "symbol", type: "core::felt252" },
						{ name: "decimals", type: "core::integer::u8" },
						{ name: "initial_supply", type: "core::integer::u256" },
						{
							name: "recipient",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{
							name: "permitted_minter",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{
							name: "provisional_governance_admin",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{ name: "upgrade_delay", type: "core::integer::u64" },
					],
				},
				{
					type: "function",
					name: "increase_allowance",
					inputs: [
						{
							name: "spender",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{ name: "added_value", type: "core::integer::u256" },
					],
					outputs: [{ type: "core::bool" }],
					state_mutability: "external",
				},
				{
					type: "function",
					name: "decrease_allowance",
					inputs: [
						{
							name: "spender",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{ name: "subtracted_value", type: "core::integer::u256" },
					],
					outputs: [{ type: "core::bool" }],
					state_mutability: "external",
				},
				{
					type: "function",
					name: "increaseAllowance",
					inputs: [
						{
							name: "spender",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{ name: "addedValue", type: "core::integer::u256" },
					],
					outputs: [{ type: "core::bool" }],
					state_mutability: "external",
				},
				{
					type: "function",
					name: "decreaseAllowance",
					inputs: [
						{
							name: "spender",
							type: "core::starknet::contract_address::ContractAddress",
						},
						{ name: "subtractedValue", type: "core::integer::u256" },
					],
					outputs: [{ type: "core::bool" }],
					state_mutability: "external",
				},
				{
					type: "event",
					name: "src::strk::erc20_lockable::ERC20Lockable::Transfer",
					kind: "struct",
					members: [
						{
							name: "from",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "to",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{ name: "value", type: "core::integer::u256", kind: "data" },
					],
				},
				{
					type: "event",
					name: "src::strk::erc20_lockable::ERC20Lockable::Approval",
					kind: "struct",
					members: [
						{
							name: "owner",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "spender",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{ name: "value", type: "core::integer::u256", kind: "data" },
					],
				},
				{
					type: "event",
					name: "src::replaceability_interface::ImplementationAdded",
					kind: "struct",
					members: [
						{
							name: "implementation_data",
							type: "src::replaceability_interface::ImplementationData",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "src::replaceability_interface::ImplementationRemoved",
					kind: "struct",
					members: [
						{
							name: "implementation_data",
							type: "src::replaceability_interface::ImplementationData",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "src::replaceability_interface::ImplementationReplaced",
					kind: "struct",
					members: [
						{
							name: "implementation_data",
							type: "src::replaceability_interface::ImplementationData",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "src::replaceability_interface::ImplementationFinalized",
					kind: "struct",
					members: [
						{
							name: "impl_hash",
							type: "core::starknet::class_hash::ClassHash",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "src::access_control_interface::RoleGranted",
					kind: "struct",
					members: [
						{ name: "role", type: "core::felt252", kind: "data" },
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "sender",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "src::access_control_interface::RoleRevoked",
					kind: "struct",
					members: [
						{ name: "role", type: "core::felt252", kind: "data" },
						{
							name: "account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "sender",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "src::access_control_interface::RoleAdminChanged",
					kind: "struct",
					members: [
						{ name: "role", type: "core::felt252", kind: "data" },
						{
							name: "previous_admin_role",
							type: "core::felt252",
							kind: "data",
						},
						{ name: "new_admin_role", type: "core::felt252", kind: "data" },
					],
				},
				{
					type: "event",
					name: "src::roles_interface::GovernanceAdminAdded",
					kind: "struct",
					members: [
						{
							name: "added_account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "added_by",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "src::roles_interface::GovernanceAdminRemoved",
					kind: "struct",
					members: [
						{
							name: "removed_account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "removed_by",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "src::roles_interface::UpgradeGovernorAdded",
					kind: "struct",
					members: [
						{
							name: "added_account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "added_by",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "src::roles_interface::UpgradeGovernorRemoved",
					kind: "struct",
					members: [
						{
							name: "removed_account",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
						{
							name: "removed_by",
							type: "core::starknet::contract_address::ContractAddress",
							kind: "data",
						},
					],
				},
				{
					type: "event",
					name: "src::strk::erc20_lockable::ERC20Lockable::Event",
					kind: "enum",
					variants: [
						{
							name: "Transfer",
							type: "src::strk::erc20_lockable::ERC20Lockable::Transfer",
							kind: "nested",
						},
						{
							name: "Approval",
							type: "src::strk::erc20_lockable::ERC20Lockable::Approval",
							kind: "nested",
						},
						{
							name: "ImplementationAdded",
							type: "src::replaceability_interface::ImplementationAdded",
							kind: "nested",
						},
						{
							name: "ImplementationRemoved",
							type: "src::replaceability_interface::ImplementationRemoved",
							kind: "nested",
						},
						{
							name: "ImplementationReplaced",
							type: "src::replaceability_interface::ImplementationReplaced",
							kind: "nested",
						},
						{
							name: "ImplementationFinalized",
							type: "src::replaceability_interface::ImplementationFinalized",
							kind: "nested",
						},
						{
							name: "RoleGranted",
							type: "src::access_control_interface::RoleGranted",
							kind: "nested",
						},
						{
							name: "RoleRevoked",
							type: "src::access_control_interface::RoleRevoked",
							kind: "nested",
						},
						{
							name: "RoleAdminChanged",
							type: "src::access_control_interface::RoleAdminChanged",
							kind: "nested",
						},
						{
							name: "GovernanceAdminAdded",
							type: "src::roles_interface::GovernanceAdminAdded",
							kind: "nested",
						},
						{
							name: "GovernanceAdminRemoved",
							type: "src::roles_interface::GovernanceAdminRemoved",
							kind: "nested",
						},
						{
							name: "UpgradeGovernorAdded",
							type: "src::roles_interface::UpgradeGovernorAdded",
							kind: "nested",
						},
						{
							name: "UpgradeGovernorRemoved",
							type: "src::roles_interface::UpgradeGovernorRemoved",
							kind: "nested",
						},
					],
				},
			],
		},
	},
} as const;

export default configExternalContracts;
